# HG changeset patch
# User Cameron Kaiser <spectre@floodgap.com>
# Date 1695355376 25200
#      Thu Sep 21 21:02:56 2023 -0700
# Node ID 4404797bd39a18f98b2f1a2c65ffe079404c2ee6
# Parent  1771d1807f7bfd16be4631b7485f010cfb64031d
ion and wasm back on in browser build

diff -r 1771d1807f7b -r 4404797bd39a js/xpconnect/src/XPCJSContext.cpp
--- a/js/xpconnect/src/XPCJSContext.cpp	Thu Sep 21 20:58:43 2023 -0700
+++ b/js/xpconnect/src/XPCJSContext.cpp	Thu Sep 21 21:02:56 2023 -0700
@@ -895,18 +895,18 @@
                                   false);
     JS_SetGlobalJitCompilerOption(cx, JSJITCOMPILER_JIT_HINTS_ENABLE, false);
     sSelfHostedUseSharedMemory = false;
   } else {
     JS_SetGlobalJitCompilerOption(
         cx, JSJITCOMPILER_BASELINE_ENABLE,
         StaticPrefs::javascript_options_baselinejit_DoNotUseDirectly());
     JS_SetGlobalJitCompilerOption(
-        cx, JSJITCOMPILER_ION_ENABLE, false); // XXX
-        //StaticPrefs::javascript_options_ion_DoNotUseDirectly());
+        cx, JSJITCOMPILER_ION_ENABLE,
+        StaticPrefs::javascript_options_ion_DoNotUseDirectly());
     JS_SetGlobalJitCompilerOption(cx,
                                   JSJITCOMPILER_JIT_TRUSTEDPRINCIPALS_ENABLE,
                                   useJitForTrustedPrincipals);
     JS_SetGlobalJitCompilerOption(
         cx, JSJITCOMPILER_NATIVE_REGEXP_ENABLE,
         StaticPrefs::javascript_options_native_regexp_DoNotUseDirectly());
     // Only enable the jit hints cache for the content process to avoid
     // any possible jank or delays on the parent process.
diff -r 1771d1807f7b -r 4404797bd39a modules/libpref/init/all.js
--- a/modules/libpref/init/all.js	Thu Sep 21 20:58:43 2023 -0700
+++ b/modules/libpref/init/all.js	Thu Sep 21 21:02:56 2023 -0700
@@ -951,21 +951,21 @@
 // that are associated with other domains which have
 // user interaction (even if they don't have user
 // interaction directly).
 pref("privacy.purge_trackers.consider_entity_list", false);
 
 pref("dom.event.contextmenu.enabled",       true);
 
 pref("javascript.enabled",                  true);
-pref("javascript.options.asmjs",                  false);
-pref("javascript.options.wasm",                   false);
-pref("javascript.options.wasm_trustedprincipals", false);
+pref("javascript.options.asmjs",                  true);
+pref("javascript.options.wasm",                   true);
+pref("javascript.options.wasm_trustedprincipals", true);
 pref("javascript.options.wasm_verbose",           false);
-pref("javascript.options.wasm_baselinejit",       false);
+pref("javascript.options.wasm_baselinejit",       true);
 
 pref("javascript.options.parallel_parsing", true);
 pref("javascript.options.source_pragmas",    true);
 
 pref("javascript.options.asyncstack", true);
 // Broadly capturing async stack data adds overhead that is only advisable for
 // developers, so we only enable it when the devtools are open, by default.
 pref("javascript.options.asyncstack_capture_debuggee_only", true);
